name: Build and Push Backend Docker Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'backend/**/*.py'
      - 'backend/requirements.txt'
      - 'backend/Dockerfile'
      - 'backend/docker-compose.yml'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**/*.py'
      - 'backend/requirements.txt'
      - 'backend/Dockerfile'
      - 'backend/docker-compose.yml'

env:
  DOCKER_TAG: ${{ github.sha }}
  DOCKER_REPO: kinnito/smart-legal-assistance

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Get Docker credentials
      id: docker-creds
      run: |
        if [ -f .github/config/docker-credentials.txt ]; then
          # Read credentials from the file
          DOCKERHUB_USERNAME=$(grep "username=" .github/config/docker-credentials.txt | cut -d= -f2)
          DOCKERHUB_TOKEN=$(grep "token=" .github/config/docker-credentials.txt | cut -d= -f2)
          
          # Save as outputs
          echo "::set-output name=username::$DOCKERHUB_USERNAME"
          echo "::set-output name=token::$DOCKERHUB_TOKEN"
        else
          echo "Credentials file not found. Please create .github/config/docker-credentials.txt"
          exit 1
        fi
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ steps.docker-creds.outputs.username }}
        password: ${{ steps.docker-creds.outputs.token }}
    
    - name: Build and Push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }}
          ${{ env.DOCKER_REPO }}:latest
        cache-from: type=registry,ref=${{ env.DOCKER_REPO }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_REPO }}:buildcache,mode=max
        
    - name: Run backend tests
      run: |
        docker run --rm \
          -e DEBUG=True \
          -e DATABASE_URL=sqlite:///memory \
          -e SECRET_KEY=test-key \
          -e CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,https://smart-legal-assistance.onrender.com \
          -e DJANGO_SETTINGS_MODULE=config.settings.test \
          ${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }} python manage.py test
    
    # Only enable this step once you have set up the RENDER_DEPLOY_HOOK secret or URL
    # - name: Update deployment
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   run: |
    #     curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }} 